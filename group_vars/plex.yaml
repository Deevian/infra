---

hostname: "{{ hosts.plex.hostname }}"
hostname_plex: "{{ hostname }}"

# deev-checkmk-agent
checkmk_agent_hash: afb596b83bfbad40

# deev-pkg
package_list:
  - gpg
  - python3-pip

## ironicbadger.docker_compose_generator
appdata_path: /mnt/appdata
media_path: /mnt/media
downloads_path: /mnt/downloads

containers:
  - service_name: plex
    active: true
    image: linuxserver/plex:latest
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - "{{ appdata_path }}/plex/config:/config"

      - "{{ media_path }}/anime:/data/anime:ro"
      - "{{ media_path }}/anime-movies:/data/anime-movies:ro"
      - "{{ media_path }}/movies:/data/movies:ro"
      - "{{ media_path }}/television:/data/television:ro"
      - "{{ downloads_path }}/transcode:/data/transcode"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: jellyfin
    active: true
    image: jellyfin/jellyfin:latest
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - "{{ appdata_path }}/jellyfin:/config"

      - "{{ media_path }}/anime:/data/anime:ro"
      - "{{ media_path }}/anime-movies:/data/anime-movies:ro"
      - "{{ media_path }}/movies:/data/movies:ro"
      - "{{ media_path }}/television:/data/television:ro"
      - "{{ downloads_path }}/transcode:/cache"
    include_global_env_vars: true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4000M

  - service_name: deluge
    active: true
    image: linuxserver/deluge:latest
    network_mode: host
    volumes:
      - "{{ appdata_path }}/deluge:/config"
      - "{{ downloads_path }}/torrents:/data/downloads"
      - "{{ media_path }}/downloads-completed:/data/downloads-completed"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: prowlarr
    active: true
    image: linuxserver/prowlarr:develop
    network_mode: host
    volumes:
      - "{{ appdata_path }}/prowlarr:/config"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: radarr
    active: true
    image: linuxserver/radarr:develop
    network_mode: host
    volumes:
      - "{{ appdata_path }}/radarr:/config"
      - "{{ media_path }}:/data"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: sonarr
    active: true
    image: linuxserver/sonarr:develop
    network_mode: host
    volumes:
      - "{{ appdata_path }}/sonarr:/config"
      - "{{ media_path }}:/data"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: overseerr
    active: true
    image: linuxserver/overseerr:develop
    network_mode: host
    volumes:
      - "{{ appdata_path }}/overseerr:/config"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: bazarr
    active: true
    image: linuxserver/bazarr:latest
    network_mode: host
    volumes:
      - "{{ appdata_path }}/bazarr:/config"
      - "{{ media_path }}:/data"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: tautulli
    active: true
    image: linuxserver/tautulli:latest
    network_mode: host
    volumes:
      - "{{ appdata_path }}/tautulli:/config"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: notifiarr
    hostname: notifiarr
    active: true
    image: golift/notifiarr
    network_mode: host
    volumes:
      - "{{ appdata_path }}/notifiarr:/config"
      - "/var/run/utmp:/var/run/utmp"
      - "/etc/machine-id:/etc/machine-id:ro"
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: sabnzbd
    active: true
    image: linuxserver/sabnzbd:latest
    network_mode: host
    volumes:
      - "{{ appdata_path }}/init-files/sabnzbd:/custom-cont-init.d:ro"
      - "{{ appdata_path }}/sabnzbd:/config"
      - "{{ downloads_path }}/usenet:/data/usenet"
      - "{{ media_path }}/downloads-completed:/data/downloads-completed"
    include_global_env_vars: true
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '6'
