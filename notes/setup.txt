# Show disks by ID
ls -lah /dev/disk/by-id/

# Setup zfs mirror, tank dataset
apt install zfsutils-linux
zpool create tank mirror -m /mnt/tank -o ashift=12 /dev/disk/by-id/disk-1-id /dev/disk/by-id/disk-2-id

# Attach new disk to mirror
zpool attach tank existing-disk-id new-disk-id

# List zfs pools
zpool list

# List zfs mounts
zfs list

# Create tank datasets
zfs create tank/backups
zfs create tank/fuse

# Create host datasets
zfs create rpool/appdata
zfs create rpool/downlods

# Set host datasets mountpoints
zfs set mountpoint=/mnt/nvme0n1/appdata rpool/appdata
zfs set mountpoint=/mnt/nvme0n1/downloads rpool/downloads

# Format storage disks as xfs
gdisk /dev/sdX
    o - creates a new EMPTY GPT partition table (GPT is good for large drives over 3TB)
        Proceed? (Y/N) - Y
    n - creates a new partition
        Partition number (1-128, default 1): 1
        First sector (34-15628053134, default = 2048) or {+-}size{KMGTP}: leave blank
        Last sector (2048-15628053134, default = 15628053134) or {+-}size{KMGTP}: leave blank
        Hex code or GUID (L to show codes, Enter = 8300): 8300
    p - (optional) validate 1 large partition to be created
        Model: HGST HDN728080AL
        Number Start (sector) End (sector) Size Code Name
        1 2048 15628053134 7.3 TiB 8300 Linux filesystem
    w - writes the changes made thus far
        Until this point, gdisk has been non-destructive
        Confirm that making these changes is OK and the changes queued so far will be executed

mkfs.xfs /dev/sdX1

# iGPU Passthrough
lxc.cgroup.devices.allow: c 226:128 rwm
lxc.cgroup2.devices.allow: c 226:128 rwm
lxc.mount.entry: /dev/dri/renderD128 dev/dri/renderD128 none bind,optional,create=file 0 0


Create a zvol (on a root pool in this example, but can be anywhere): zfs create -s -V 30G rpool/docker_lxc. docker_lxc is the zvol name, can be anything, and 30G is a 30GB size (arbitrary tbh, depends on how many images you'll have and how you manager other container data)

Check it's actually sparse: zfs get volsize,referenced rpool/docker_lxc, volsize should be 30GB (that's the max it can take), referenced is how much is actually used (should be very little when it's just created)

Format it as ext4: mkfs.ext4 /dev/zvol/rpool/docker_lxc

Mount it into a temp location to change permissions (as mentioned in one of the replies): mkdir /tmp/zvol_tmp, mount /dev/zvol/rpool/docker_lxc /tmp/zvol_tmp, chown -R 100000:100000 /tmp/zvol_tmp, umount /tmp/zvol_tmp

add mountpoint into lxc, adding this into /etc/pve/lxc/<container id>.conf: mpX: /dev/zvol/rpool/docker_lxc, mp=/var/lib/docker, backup=0, where X is the number for your mountpoint (in case there are others already present)